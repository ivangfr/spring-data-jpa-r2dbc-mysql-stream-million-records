services:

  mysql:
    image: 'mysql:9.1.0'
    container_name: 'mysql'
    ports:
      - '3306:3306'
    environment:
      - 'MYSQL_ROOT_PASSWORD=secret'
      - 'MYSQL_DATABASE=customerdb'
    healthcheck:
      test: 'mysqladmin ping -u root -p$${MYSQL_ROOT_PASSWORD}'

  zookeeper:
    image: 'confluentinc/cp-zookeeper:7.8.0'
    container_name: 'zookeeper'
    ports:
      - '2181:2181'
    environment:
      - 'ZOOKEEPER_CLIENT_PORT=2181'
    healthcheck:
      test: 'echo stat | nc localhost $$ZOOKEEPER_CLIENT_PORT'

  kafka:
    image: 'confluentinc/cp-kafka:7.8.0'
    container_name: 'kafka'
    depends_on:
      - 'zookeeper'
    ports:
      - '9092:9092'
      - '29092:29092'
    environment:
      - 'KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181'
      - 'KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      - 'KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092'
      - 'KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1'
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9092" ]

  kafdrop:
    image: 'obsidiandynamics/kafdrop:4.0.2'
    container_name: 'kafdrop'
    depends_on:
      - 'kafka'
    ports:
      - '9001:9000'
    environment:
      - 'KAFKA_BROKERCONNECT=kafka:9092'
    healthcheck:
      test: 'curl -f http://localhost:9000 || exit 1'

#  cadvisor:
#    image: 'gcr.io/cadvisor/cadvisor:v0.49.2'
#    container_name: 'cadvisor'
#    ports:
#      - '8080:8080'
#    volumes:
#      - '/:/rootfs:ro'
#      - '/var/run:/var/run:rw'
#      - '/sys:/sys:ro'
#      - '/var/lib/docker/:/var/lib/docker:ro'
#      - '/var/run/docker.sock:/var/run/docker.sock'
